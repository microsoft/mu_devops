# @file ReleaseWorkflow.yml
#
# A reusable CI workflow that releases all crates in a repository.
#
##
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##
name: Publish

on:
  workflow_call:
    secrets:
      CRATES_IO_TOKEN:
        description: 'The token to use for authenticating with crates.io'
        required: true

jobs:
  run:
    name: Publish

    runs-on: ubuntu-latest

    permissions:
      contents: write
      actions: read
      pull-requests: write

    steps:
      - name: ✅ Checkout Repository ✅
        uses: actions/checkout@v4

      - name: 🛠️ Download Rust Tools 🛠️
        uses: microsoft/mu_devops/.github/actions/rust-tool-cache@main

      - name: Get Release Tag
        id: release_tag
        run: |
          tag_name="${{ github.event.release.tag_name }}"
          
          # remove the leading 'v' if it exists
          release_tag="${tag_name#v}" 

          echo "Release Tag: $release_tag"
          echo "tag=$release_tag" >> $GITHUB_OUTPUT
        shell: bash

      - name: Update git credentials
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
      - name: Checkout New Branch
        run: |
          git checkout -b "github-actions/release-${{ steps.release_tag.outputs.tag }}"
          git push origin "github-actions/release-${{ steps.release_tag.outputs.tag }}"

      - name: Login to Crates.io
        run: cargo login ${{ secrets.CRATES_IO_TOKEN }}

      - name: Cargo Release Dry Run
        run: cargo release ${{ steps.release_tag.outputs.tag }} --workspace
        env:
          RUSTC_BOOTSTRAP: 1

      - name: Cargo Release
        run: cargo release ${{ steps.release_tag.outputs.tag }} -x --no-tag --no-confirm --workspace
        env:
          RUSTC_BOOTSTRAP: 1

      - name: Publish PR
        uses: actions/github-script@v7
        with:
          script: |
            const defaultBranch = context.payload.repository.default_branch;

            const { data: pullRequest } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'chore: Update repo version to ${{ steps.release_tag.outputs.tag }}',
              head: `github-actions/release-${{ steps.release_tag.outputs.tag }}`,
              base: defaultBranch,
              body: 'An automatically created pull request to update the version of the repo due to a release.',
              draft: false
            });

            console.log(`PR created ${pullRequest.html_url}`);
