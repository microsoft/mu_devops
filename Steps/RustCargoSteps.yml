## @file
# Azure Pipelines step to run common Cargo commands.
#
# Environment Assumptions:
#
# - Cargo should be installed on the system prior to invoking this template.
# - Cargo make should be installed on the system prior to invoking this template.
# - An `all` task should be defined in the `Makefile.toml` file.
#
# Copyright (c) Microsoft Corporation. All rights reserved.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

parameters:
- name: checkout_self
  displayName: Perform self checkout step
  type: boolean
  default: false
- name: container_build
  displayName: Flag for whether a container is being used
  type: boolean
  default: false

steps:

- ${{ if eq(parameters.checkout_self, true) }}:
  # Repos with local Rust configuration files need to do a self checkout so they are available.
  - checkout: self
    clean: true
    fetchDepth: 0

- task: CmdLine@2
  displayName: Setup Cargo Dir Permissions (Linux)
  target: host
  inputs:
    script: |
      /usr/bin/docker exec mu_devops_build_container chown -R vsts_azpcontainer:azure_pipelines_docker /.cargo
      /usr/bin/docker exec mu_devops_build_container chmod -R ug+rw /.cargo
      /usr/bin/docker exec mu_devops_build_container chown -R vsts_azpcontainer:azure_pipelines_docker /.rustup
      /usr/bin/docker exec mu_devops_build_container chmod -R ug+rw /.rustup
  condition: and(eq('${{ parameters.container_build }}', 'true'), eq(variables['Agent.OS'], 'Linux'))

- task: CmdLine@2
  displayName: Cargo Make Checks
  env:
    RUSTC_BOOTSTRAP: '1'
  inputs:
    script: cargo make all
    workingDirectory: '$(Build.SourcesDirectory)'
    failOnStandardError: true
  condition: succeeded()
